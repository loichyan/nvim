name: CICD
on:
  push:
    branches: [main]
    paths-ignore: ["**.md"]
  pull_request:
    paths-ignore: ["**.md"]

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  check:
    name: Run tests and checks
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check lua

  # How to create a new GitHub release?
  # 1. Create a release branch named "release/<tag>".
  # 2. Open a PR from the branch, including the release note in the PR body.
  # 3. Wait for the CI to create a draft release.
  # 4. Publish the release when it's ready.
  release:
    name: Create GitHub release
    needs: [check]
    if: startsWith(github.head_ref, 'release/')
    permissions:
      contents: write # need to update release
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Configure
        id: configure
        run: |
          echo tag="${GITHUB_HEAD_REF#release/}" >$GITHUB_OUTPUT

      - name: Release | Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release_tag: ${{ steps.configure.outputs.tag }}
          release_body: ${{ github.event.pull_request.body }}
        run: |
          if gh release view "$release_tag" &>/dev/null; then
            echo "update existing release $release_tag"
            command="edit"
          else
            echo "create new release $release_tag"
            command="create"
          fi
          gh release "$command" "$release_tag" \
            --target="$GITHUB_BASE_REF" \
            --draft=true \
            --title="${release_tag#v} ($(date -u +'%Y-%m-%d'))" \
            --notes="$release_body"
